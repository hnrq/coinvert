name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build release binary
        run: |
          cargo build --release
          if [ $? -ne 0 ]; then
            echo "::error::Release build failed"
            exit 1
          fi

      - name: Get binary name from Cargo.toml
        id: get_binary_name
        run: |
          BINARY_NAME=$(grep -m 1 '^name =' Cargo.toml | sed 's/name = "\(.*\)"/\1/')
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/release/${{ steps.get_binary_name.outputs.BINARY_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true
          name: Release v${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ github.ref }}

      - name: Verify crates.io token exists
        run: |
          if [ -z "${{ secrets.CRATES_IO_TOKEN }}" ]; then
            echo "::error::CRATES_IO_TOKEN is not set"
            exit 1
          fi

      - name: Publish to crates.io
        run: |
          cargo publish || {
            echo "::error::Failed to publish to crates.io"
            exit 1
          }
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

